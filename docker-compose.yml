name: 'ai-chat-ollama-spring-boot'
version: "3.7"
services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  postgres:
    image: postgres:15.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - /var/pgdata/people:/var/lib/postgresql/data/pgdata
  monolith:
    image: yuknow/smart_home_monolith:latest
    restart: always
    networks:
      - kong-net
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    links:
      - "postgres:database"
  devices-management:
    image: yuknow/devices_management:latest
    restart: always
    networks:
      - kong-net
    depends_on:
      - postgres
    ports:
      - "8082:8080"
    links:
      - "postgres:database"
  telemetry:
    image: yuknow/telemetry:latest
    restart: always
    networks:
      - kong-net
    depends_on:
      - postgres
    ports:
      - "8083:8080"
    links:
      - "postgres:database"
  kong-migrations:
    image: kong/kong-gateway:3.2.1.0
    command: kong migrations bootstrap
    container_name: kong-migrations
    networks:
      - kong-net
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: localhost
      KONG_PG_DATABASE: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: 12345
    restart: on-failure
  kong-ce:
    image: kong/kong-gateway:3.2.1.0
    container_name: kong
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: localhost
      KONG_PG_DATABASE: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: 12345
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://kong-ce:8001" ]
      interval: 5s
      timeout: 2s
      retries: 10
    ports:
      - "8000-8001:8000-8001/tcp"
      - "8443:8443"
      - "8444:8444"
networks:
  kong-net:

volumes:
  kafka-volume:
  zookeeper-volume: